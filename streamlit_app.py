import streamlit as st
from streamlit_folium import st_folium
from map_components import *
import sqlite3
import urllib.request

# —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ —à–∏—Ä–∏–Ω–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ —Ü–µ–Ω—Ç—Ä—É)
st.set_page_config(page_title = 'Map Generator', page_icon = 'üó∫Ô∏è', layout="wide")

# –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
file = st.file_uploader('–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª Excel —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ —Ç–æ—á–µ–∫:', type = ['.xlsx', '.xlsm', '.xls', '.xlsb'])

# –æ–±—Ä–∞–∑–µ—Ü —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
with st.expander("–ü—Ä–∏–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã"):
    txt = st.write('''–°–∫–∞—á–∞–π—Ç–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —à–∞–±–ª–æ–Ω –∏—Å—Ö–æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –°—Ç–æ–ª–±—Ü—ã "–®–∏—Ä–æ—Ç–∞" –∏ "–î–æ–ª–≥–æ—Ç–∞" —è–≤–ª—è—é—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏.''')
    redirect_button(r"https://github.com/Evgeny-Larin/online_maps_folium/raw/main/source/example.xlsx","–°–∫–∞—á–∞—Ç—å —à–∞–±–ª–æ–Ω")

regions_list = []
if file != None:
    points = pd.read_excel(file)
    points.rename(columns = {'–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ':'name',
                             '–ê–¥—Ä–µ—Å':'address',
                             '–®–∏—Ä–æ—Ç–∞': 'lat',
                             '–î–æ–ª–≥–æ—Ç–∞':'lon',
                             '–ì–æ—Ä–æ–¥':'city',
                             '–†–µ–≥–∏–æ–Ω':'SubRegion'}, inplace = True)
    
    points['name'].fillna('–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ', inplace = True)        
    points['address'].fillna('–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω', inplace = True) 
    points['city'].fillna('–ì–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω', inplace = True) 
    points['SubRegion'].fillna('–†–µ–≥–∏–æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω', inplace = True)
    
    points = points[(~points.lat.isna())&(~points.lon.isna())]
    # –≤—ã–±–æ—Ä –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –∏–ª–∏ –≤—Å–µ –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ
    values = ['–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ']
    values.extend(points.SubRegion.drop_duplicates().tolist())
    regions_list = st.multiselect('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω', values)

    # –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã - –æ—Ç–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç–æ—á–∫–∏
    if "–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ" not in regions_list:
        points = points[points.SubRegion.isin(regions_list)]


col01, col02 = st.columns(2)

# –∑–∞–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ä—Ç—ã
with st.sidebar:
    st.write("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä—Ç—ã:")
    mapstyle = st.radio(
                "–°—Ç–∏–ª—å:",
                ('–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ü–≤–µ—Ç–Ω–∞—è', '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–∏–≥–ª—É—à—ë–Ω–Ω–∞—è', '–ñ–î –ø—É—Ç–∏ –∏ —Å—Ç–∞–Ω—Ü–∏–∏', '–ñ–î –ø—É—Ç–∏ –∏ —Å—Ç–∞–Ω—Ü–∏–∏ 2'))

    city_on = st.checkbox('–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç–µ')
    minimap_on = st.checkbox('–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –º–∏–Ω–∏-–∫–∞—Ä—Ç—É')
    clasters_on = st.checkbox('–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–æ—á–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–∞—Å—à—Ç–∞–±–∞')

    point_size = st.slider('–†–∞–∑–º–µ—Ä —Ç–æ—á–µ–∫', 10, 200, 90)
    zoom = st.slider('–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—à—Ç–∞–± –∫–∞—Ä—Ç—ã', 1, 15, 7)

    # –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–µ–≥–µ–Ω–¥—ã
    st.write("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–µ–≥–µ–Ω–¥—ã:")
    # —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É 3—Ö4 –¥–ª—è —Ü–≤–µ—Ç–æ–≤
    col1, col2, col3, col4 = st.columns(4)
    with col1:
       hex1 = st.color_picker('–¶–≤–µ—Ç 1', '#980387', key = 1)
       hex5 = st.color_picker('–¶–≤–µ—Ç 5', '#7f9c21', key = 2)
       hex9 = st.color_picker('–¶–≤–µ—Ç 9', '#f12121', key = 3)
    with col2:
       hex2 = st.color_picker('–¶–≤–µ—Ç 2', '#ff9000', key = 4)
       hex6 = st.color_picker('–¶–≤–µ—Ç 6', '#441066', key = 5)
       hex10 = st.color_picker('–¶–≤–µ—Ç 10', '#00d7e6', key = 6) 
    with col3:
       hex3 = st.color_picker('–¶–≤–µ—Ç 3', '#f70068', key = 7)
       hex7 = st.color_picker('–¶–≤–µ—Ç 7', '#f15821', key = 8)
       hex11 = st.color_picker('–¶–≤–µ—Ç 11', '#E600D7', key = 9)
    with col4:
       hex4 = st.color_picker('–¶–≤–µ—Ç 4', '#2970e2', key = 10)
       hex8 = st.color_picker('–¶–≤–µ—Ç 8', '#64E600', key = 11)
       hex12 = st.color_picker('–¶–≤–µ—Ç 12', '#9383C9', key = 12)
       

       
# —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞
hex_palette = [hex1, hex2, hex3, hex4, hex5, hex6, hex7, hex8, hex9, hex10, hex11, hex12]


# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ—á–∞–µ—Ç –≥–æ—Ä–æ–¥–∞ –∏ –≤—ã–±—Ä–∞–ª –∫–∞–∫–æ–π-–ª–∏–±–æ —Ä–µ–≥–∏–æ–Ω
if city_on and regions_list != []:
    # –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –≥–æ—Ä–æ–¥–æ–≤
    urllib.request.urlretrieve(r'https://github.com/Evgeny-Larin/online_maps_folium/raw/main/db/cities_db.db', 'cities_db.db')
    conn = sqlite3.connect('cities_db.db')
    
    # –∏–∑ –±–∞–∑—ã –±–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≥–æ—Ä–æ–¥–∞
    city_list = points.city.unique()
    city_list = ', '.join(f"'{x}'" for x in city_list)
    city_db = pd.read_sql(con=conn, sql = f'SELECT * FROM cities WHERE CityName IN ({city_list})')


# –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ "–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ" - —Å—Ç—Ä–æ–∏–º –æ–¥–Ω—É –∫–∞—Ä—Ç—É
if regions_list ==  ["–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ"]:
           
    # —Å–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É
    russia_map = map_creator(points, mapstyle, minimap_on, zoom)
    
    # –µ—Å–ª–∏ –æ—Ç–º–µ—á–∞–µ–º –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç–µ - –æ—Ç–º–µ—á–∞–µ–º –∏—Ö –Ω–∞ –∫–∞—Ä—Ç–µ    
    if city_on:
        city_creator(city_db, russia_map)

    # –æ—Ç–º–µ—á–∞–µ–º —Ç–æ—á–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–µ    
    points_creator(points, russia_map, hex_palette, point_size, clasters_on)
    
    # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –ø–æ–¥–ø–∏—Å—å (–∞—Ç—Ä–∏–±—É—Ü–∏—é) –≤ –ø—Ä–∞–≤–æ–π –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ –∫–∞—Ä—Ç—ã
    add_atr(russia_map)
    
    # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–∞—Ä—Ç—ã (russia_map) –≤ HTML-—Å—Ç—Ä–æ–∫—É
    map_html = russia_map.get_root().render()
    
    # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ 
    file_name = "–û–±—â–∞—è –∫–∞—Ä—Ç–∞.html"
    button = st.download_button(label=f"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç—É: {file_name}", data=map_html, file_name=file_name)
    
    # –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Üy
    st_folium(russia_map,
              height=500,
              width=1200)

# –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã - —Å—Ç—Ä–æ–∏–º –∫–∞—Ä—Ç—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞
else:
    for i in regions_list:
        # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã –ò –æ–ø—Ü–∏—é "–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ"
        # –¥–ª—è "–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ" - –±–µ—Ä–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π df
        if i ==  "–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ":
            points_region = points.copy()
        # –¥–ª—è —Ä–µ–≥–∏–æ–Ω–æ–≤ - –≤—ã–±–∏—Ä–∞–µ–º –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ df –Ω—É–∂–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã
        else:
            points_region = points[(points['SubRegion'] == i)]            
    
        # —Å–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É
        russia_map = map_creator(points_region, mapstyle, minimap_on, zoom)

        # –µ—Å–ª–∏ –æ—Ç–º–µ—á–∞–µ–º –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç–µ - –æ—Ç–º–µ—á–∞–µ–º –∏—Ö –Ω–∞ –∫–∞—Ä—Ç–µ
        if city_on:
            city_db = city_db.query(f'SubRegion == "{i}"')
            city_creator(city_db, russia_map)
        
        # –æ—Ç–º–µ—á–∞–µ–º —Ç–æ—á–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–µ
        points_creator(points_region, russia_map, hex_palette, point_size, clasters_on)
        
        # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –ø–æ–¥–ø–∏—Å—å (–∞—Ç—Ä–∏–±—É—Ü–∏—é) –≤ –ø—Ä–∞–≤–æ–π –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ –∫–∞—Ä—Ç—ã
        add_atr(russia_map)
        
        # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–∞—Ä—Ç—ã (russia_map) –≤ HTML-—Å—Ç—Ä–æ–∫—É
        map_html = russia_map.get_root().render()
        
        # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ 
        file_name = f"{i} - –∫–∞—Ä—Ç–∞.html"
        button = st.download_button(label=f"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç—É: {i}", data=map_html, file_name=file_name, key = i)
        
        # –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Üy
        st_folium(russia_map,
                  height=500,
                  width=1200,
                  key = i)